#Is the profiler on or off when the app starts?
# (on | off)
profiler = on

#
# TCP listen port for remote control
# default =15599
#
port = 15599

#
# What is the default file name for the profile information
#
logFileName = methodProfile
methodFileName = methodInfo
threadInfoFileName = threadInfo
classAllocFileName = objectAlloc
sqlDetailFileName = sqlDetail
sqlDumpFileName = sqlProfDump

#
# Track Object Allocation (very expensive)
# values: (yes | no)
# default = no
#
trackObjectAlloc = no

#
# Does output method signatures?
# values: (yes | no)
# default = no
#
outputMethodSignatures = no

#
# Does output method blocking time?
# values: (yes | no)
# default = no
#
outputMethodBlockTime = no

#
# Min profiling method execution time 
# defaults to 10ms
#
methodProfileThresholdMs = 20

# The level use JDK logging level
# Output all debug information: FINEST
# Output method target source file and line number: FINE
# Output handled exception: WARNING
# Output not handled exception: SEVERE
# No debug info output: OFF

#Basic configuration items
debugMode = off
ignoreGetSetMethod = yes

#SQL profiling
# PostgreSQL 8.4 jdbc4 driver: org.postgresql.jdbc2.AbstractJdbc2Statement;org.postgresql.jdbc3.AbstractJdbc3Statement
# Oracle thin driver(ojdbc6): oracle.jdbc.driver.OracleStatement;oracle.jdbc.driver.OraclePreparedStatement
jdbcStatementClasses = 
sqlThreshold = 1000

#Schedule profiling in specific time
#The cron expression definition is as same as Quartz
schedulerCronExpression = 
#Sampling duration when scheduler triggered(in minutes)
samplingDuration = 1

#Max client sessions
maxClientSessions = 2

#Log file paths
logFilePath = ${user.home}/logs/${logFileName}
methodFilePath = ${user.home}/logs/${methodFileName}
threadInfoFilePath = ${user.home}/logs/${threadInfoFileName}
classAllocFilePath = ${user.home}/logs/${classAllocFileName}
sqlDetailFilePath = ${user.home}/logs/${sqlDetailFileName}
sqlDumpFilePath = ${user.home}/logs/${sqlDumpFileName}

# ClassLoader filter
excludeClassLoader = org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader

# Package filter(multiple packages separated by semicolon)
includePackageStartsWith = dyno.swing;org.rapla
excludePackageStartsWith = 
excludeThreadsLike =